@model List<CapaObjetos.ViewModelos.ListaEventoViewModelo>

@{
    ViewData["Title"] = "Próximos Eventos";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4 flex-wrap gap-3">
        <h2><i class="fas fa-calendar-alt me-2"></i> Próximos Eventos</h2>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-opal alert-dismissible fade show text-white">
            <i class="fas fa-check-circle me-2"></i> @TempData["Success"]
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-light-orchid alert-dismissible fade show text-white">
            <i class="fas fa-exclamation-circle me-2"></i> @TempData["Error"]
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (Model.Any())
    {
        <div class="row g-4">
            @foreach (var evento in Model.OrderBy(e => e.FechaHora))
            {
                <div class="col-md-6 col-lg-4">
                    <div class="card border-0 shadow-soft h-100 hover-lift">
                        @if (!string.IsNullOrEmpty(evento.Banner))
                        {
                            <img src="@evento.Banner" class="card-img-top" alt="Banner del evento" style="height: 200px; object-fit: cover;">
                        }
                        else
                        {
                            <div class="card-img-top bg-opal d-flex align-items-center justify-content-center" style="height: 200px;">
                                <i class="fas fa-calendar-day fa-3x text-white"></i>
                            </div>
                        }

                        <div class="card-header bg-transparent d-flex justify-content-between align-items-center">
                            <span class="badge @(evento.Estado == true ? "bg-opal" : "bg-light-orchid")">
                                @(evento.Estado == true ? "Activo" : "Inactivo")
                            </span>
                            <small class="text-muted">
                                @{
                                    var diasRestantes = (evento.FechaHora - DateTime.Now).Days;
                                }
                                @if (diasRestantes == 0)
                                {
                                    <span class="badge bg-gothic">HOY</span>
                                }
                                else if (diasRestantes == 1)
                                {
                                    <span class="badge bg-edgewater text-gothic">MAÑANA</span>
                                }
                                else
                                {
                                    <span class="text-muted">En @diasRestantes días</span>
                                }
                            </small>
                        </div>

                        <div class="card-body">
                            <h5 class="card-title">@evento.Nombre</h5>

                            <div class="mb-3">
                                <small class="text-muted">
                                    <i class="fas fa-map-marker-alt me-2"></i> @evento.Ubicacion
                                </small>
                            </div>

                            <div class="mb-3">
                                <small class="text-muted">
                                    <i class="fas fa-calendar me-2"></i> @evento.FechaHora.ToString("dddd, dd 'de' MMMM")
                                </small>
                            </div>

                            <div class="mb-3">
                                <small class="text-muted">
                                    <i class="fas fa-clock me-2"></i> @evento.FechaHora.ToString("HH:mm")
                                </small>
                            </div>

                            <p class="card-text text-truncate-3">
                                @evento.Descripcion
                            </p>

                            <div class="mb-3">
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="text-muted">Capacidad:</span>
                                    <span class="fw-bold">@evento.Capacidad personas</span>
                                </div>
                                @if (evento.PrecioBase > 0)
                                {
                                    <div class="d-flex justify-content-between align-items-center">
                                        <span class="text-muted">Precio:</span>
                                        <span class="h6 text-gothic mb-0">₡@evento.PrecioBase.ToString("N2")</span>
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="card-footer bg-transparent border-0 pt-0">
                            <div class="d-grid gap-2">
                                <a asp-action="Details" asp-route-id="@evento.EventoId"
                                   class="btn btn-outline-gothic">
                                    <i class="fas fa-eye me-2"></i> Detalles
                                </a>

                                @if ((evento.Estado ?? false) && evento.FechaHora > DateTime.Now)
                                {
                                    <a asp-controller="Boleto" asp-action="Comprar" asp-route-id="@evento.EventoId"
                                       class="btn btn-primary">
                                        <i class="fas fa-ticket-alt me-2"></i> Comprar
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="row mt-5">
            <div class="col-12">
                <div class="card bg-aqua-squeeze border-0 shadow-soft">
                    <div class="card-body">
                        <div class="row text-center">
                            <div class="col-md-4 mb-3 mb-md-0">
                                <h4 class="text-gothic">@Model.Count()</h4>
                                <small class="text-muted text-black"><strong>Próximos Eventos</strong></small>
                            </div>
                            <div class="col-md-4 mb-3 mb-md-0">
                                <h4 class="text-opal">@Model.Where(e => e.FechaHora.Date == DateTime.Today).Count()</h4>
                                <small class="text-muted text-black"><strong>Eventos Hoy</strong></small>
                            </div>
                            <div class="col-md-4">
                                <h4 class="text-edgewater">@Model.Where(e => e.FechaHora <= DateTime.Now.AddDays(7)).Count()</h4>
                                <small class="text-muted text-black"><strong>Esta Semana</strong></small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <div class="mb-4">
                <i class="fas fa-calendar-times fa-5x text-opal"></i>
            </div>
            <h4 class="text-gothic">No hay próximos eventos</h4>
            <p class="text-muted mb-4">Por el momento no tenemos eventos programados.</p>
        </div>
    }
</div>

<style>
    .text-truncate-3 {
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .hover-lift {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .hover-lift:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1) !important;
        }

    .card-img-top {
        border-top-left-radius: 12px;
        border-top-right-radius: 12px;
    }

    .alert-opal {
        background-color: var(--opal);
    }

    .alert-light-orchid {
        background-color: var(--light-orchid);
    }
</style>