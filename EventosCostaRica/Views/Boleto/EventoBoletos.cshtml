@model List<CapaObjetos.ViewModelos.BoletoViewModelo>
@{
    ViewData["Title"] = "Boletos del Evento";
    var evento = ViewBag.Evento as CapaObjetos.ViewModelos.ListaEventoViewModelo;
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4 flex-wrap gap-3">
        <div>
            <h2 class="mb-1"><i class="fas fa-list me-2 text-white"></i> Boletos del Evento</h2>
            @if (evento != null)
            {
                <p class="text-muted mb-0">@evento.Nombre</p>
            }
        </div>
        <a asp-controller="ListaEvento" asp-action="Index" class="btn btn-outline-gothic">
            <i class="fas fa-arrow-left me-2"></i> Volver
        </a>
    </div>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show">
            <i class="fas fa-exclamation-circle me-2"></i> @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (Model.Any())
    {
        <div class="row g-4 mb-4">
            <div class="col-md-3">
                <div class="card bg-edgewater text-gothic text-center border-0 h-100">
                    <div class="card-body p-3">
                        <h3 class="mb-0">@Model.Count()</h3>
                        <p class="mb-0">Total Boletos</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-edgewater text-gothic text-center border-0 h-100">
                    <div class="card-body p-3">
                        <h3 class="mb-0">@Model.Count(b => b.Estado)</h3>
                        <p class="mb-0">Válidos</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-light-orchid text-white text-center border-0 h-100">
                    <div class="card-body p-3">
                        <h3 class="mb-0">₡@Model.Where(b => b.Estado).Sum(b => b.Precio).ToString("N0")</h3>
                        <p class="mb-0">Ingresos</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-edgewater text-gothic text-center border-0 h-100">
                    <div class="card-body p-3">
                        <h3 class="mb-0">@Model.GroupBy(b => b.UsuarioId).Count()</h3>
                        <p class="mb-0">Compradores</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="card border-0 shadow-soft mb-4">
            <div class="card-header bg-gothic text-white">
                <h5 class="mb-0"><i class="fas fa-table me-2"></i> Lista de Boletos</h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Comprador</th>
                                <th>Asiento</th>
                                <th>Precio</th>
                                <th>Fecha</th>
                                <th>Estado</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var boleto in Model.OrderBy(b => b.InformacionAsiento))
                            {
                                <tr>
                                    <td><strong>#@boleto.BoletoId</strong></td>
                                    <td>@boleto.NombreUsuario</td>
                                    <td><span class="badge bg-edgewater">@boleto.InformacionAsiento</span></td>
                                    <td>₡@boleto.Precio.ToString("N2")</td>
                                    <td>
                                        <small>
                                            @boleto.FechaCompra.ToString("dd/MM/yyyy")<br>
                                            <span class="text-muted">@boleto.FechaCompra.ToString("HH:mm")</span>
                                        </small>
                                    </td>
                                    <td>
                                        <span class="badge @(boleto.Estado ? "bg-opal" : "bg-light-orchid")">
                                            @(boleto.Estado ? "Válido" : "Cancelado")
                                        </span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="card border-0 shadow-soft">
            <div class="card-header bg-gothic text-white">
                <h5 class="mb-0"><i class="fas fa-couch me-2"></i> Distribución de Asientos</h5>
            </div>
            <div class="card-body">
                <div class="text-center mb-4">
                    <div class="badge bg-dark px-3 py-2 mb-3">ESCENARIO</div>
                    <div class="d-flex justify-content-center gap-3">
                        <span class="badge bg-opal">Disponible</span>
                        <span class="badge bg-light-orchid">Vendido</span>
                    </div>
                </div>

                <div class="asientos-container">
                    @for (int fila = 1; fila <= 10; fila++)
                    {
                        <div class="fila-asientos mb-2">
                            <span class="fila-numero text-gothic fw-bold">@fila</span>
                            @for (int numero = 1; numero <= 10; numero++)
                            {
                                var boletoAsiento = Model.FirstOrDefault(b =>
                                b.InformacionAsiento.Contains($"Fila {fila}") &&
                                b.InformacionAsiento.Contains($"Asiento {numero}") &&
                                b.Estado);
                                var vendido = boletoAsiento != null;

                                <span class="asiento-mini @(vendido ? "vendido bg-light-orchid" : "disponible bg-opal")"
                                      title="Fila @fila - Asiento @numero (@(vendido ? $"Vendido a {boletoAsiento.NombreUsuario}" : "Disponible"))">
                                    @numero
                                </span>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <div class="mb-4">
                <i class="fas fa-ticket-alt fa-5x text-opal"></i>
            </div>
            <h4 class="text-gothic">No se han vendido boletos</h4>
            <p class="text-muted">Cuando se vendan boletos, aparecerán aquí.</p>
        </div>
    }
</div>

<style>
    .asientos-container {
        max-width: 500px;
        margin: 0 auto;
    }

    .fila-asientos {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 4px;
    }

    .fila-numero {
        width: 25px;
        text-align: center;
        margin-right: 10px;
    }

    .asiento-mini {
        display: inline-flex;
        width: 26px;
        height: 26px;
        align-items: center;
        justify-content: center;
        border-radius: 6px;
        font-size: 10px;
        font-weight: 500;
        color: white;
        cursor: default;
    }

    .table th {
        font-weight: 500;
        background-color: var(--aqua-squeeze);
    }
</style>