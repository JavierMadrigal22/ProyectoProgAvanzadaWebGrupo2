@model CapaObjetos.ViewModelos.ComprarBoletoViewModelo

@{
    ViewData["Title"] = "Comprar Boletos";
    Layout = "_Layout";
}

<div class="container py-4">
    <div class="row g-4">
        <div class="col-lg-8">
            <div class="card border-0 shadow-soft">
                <div class="card-header bg-gothic text-white py-3">
                    <h4 class="mb-0"><i class="fas fa-ticket-alt me-2"></i> Seleccionar Asientos</h4>
                    <p class="mb-0 small">Evento: <strong>@Model.Evento.Nombre</strong></p>
                </div>
                <div class="card-body">
                    <form asp-action="Comprar" method="post" id="formCompra">
                        @Html.AntiForgeryToken()
                        <input type="hidden" asp-for="EventoId" />
                        <input type="hidden" asp-for="UsuarioId" />

                        <div class="row g-3 mb-4">
                            <div class="col-md-6">
                                <p class="mb-0"><i class="fas fa-map-marker-alt text-gothic me-2"></i> <strong>Ubicación:</strong> @Model.Evento.Ubicacion</p>
                            </div>
                            <div class="col-md-6">
                                <p class="mb-0"><i class="fas fa-calendar-alt text-gothic me-2"></i> <strong>Fecha:</strong> @Model.Evento.FechaHora.ToString("dd/MM/yyyy HH:mm")</p>
                            </div>
                        </div>

                        <div class="text-center mb-4">
                            <div class="badge bg-dark px-3 py-2 mb-3">ESCENARIO</div>
                            <div class="d-flex justify-content-center gap-3">
                                <span class="badge bg-opal me-2">Disponible</span>
                                <span class="badge bg-light-orchid me-2">Ocupado</span>
                                <span class="badge bg-gothic">Seleccionado</span>
                            </div>
                        </div>

                        <div class="asientos-container mb-4" style="max-height: 400px; overflow-y: auto;">
                            @for (int fila = 1; fila <= 10; fila++)
                            {
                                <div class="fila-asientos mb-2">
                                    <span class="fila-numero text-gothic fw-bold">@fila</span>
                                    @for (int numero = 1; numero <= 10; numero++)
                                    {
                                        var asiento = Model.Asientos.FirstOrDefault(a => a.Fila == fila && a.Numero == numero);
                                        var disponible = asiento != null && !asiento.EstaOcupado;

                                        if (disponible)
                                        {
                                            var isSelected = Model.AsientosSeleccionados.Contains(asiento?.AsientoId ?? 0);
                                            <label class="asiento-label">
                                                <input type="checkbox" name="AsientosSeleccionados" value="@(asiento?.AsientoId ?? 0)"
                                                       class="asiento-checkbox d-none" @(isSelected ? "checked" : "") />
                                                <span class="asiento @(isSelected ? "seleccionado bg-gothic" : "disponible bg-opal")"
                                                      data-fila="@fila" data-numero="@numero"
                                                      title="Fila @fila - Asiento @numero">
                                                    @numero
                                                </span>
                                            </label>
                                        }
                                        else
                                        {
                                            <span class="asiento ocupado bg-light-orchid"
                                                  title="Fila @fila - Asiento @numero (Ocupado)">
                                                @numero
                                            </span>
                                        }
                                    }
                                </div>
                            }
                        </div>

                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                        @if (TempData["Error"] != null)
                        {
                            <div class="alert alert-danger">
                                <i class="fas fa-exclamation-triangle me-2"></i> @TempData["Error"]
                            </div>
                        }

                        <div class="d-flex justify-content-between py-4">
                            <a asp-controller="ListaEvento" asp-action="Details" asp-route-id="@Model.EventoId"
                               class="btn btn-outline-gothic">
                                <i class="fas fa-arrow-left me-2"></i> Volver
                            </a>
                            <button type="submit" class="btn btn-primary" id="btnComprar" disabled>
                                <i class="fas fa-shopping-cart me-2"></i> <span id="btnTexto">Comprar Boletos</span>
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card border-0 shadow-soft">
                <div class="card-header bg-gothic text-white py-3">
                    <h5 class="mb-0"><i class="fas fa-receipt me-2"></i> Resumen</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <p class="mb-1"><strong>Precio por boleto:</strong></p>
                        <h4 class="text-gothic">₡@Model.Evento.PrecioBase.ToString("N2")</h4>
                    </div>

                    <div class="mb-3">
                        <p class="mb-1"><strong>Asientos seleccionados:</strong></p>
                        <h5 class="text-opal" id="cantidadAsientos">0</h5>
                    </div>

                    <div class="mb-4">
                        <p class="mb-1"><strong>Total a pagar:</strong></p>
                        <h3 class="text-gothic" id="totalPagar">₡0.00</h3>
                    </div>

                    <hr>

                    <div id="asientosSeleccionados" class="mb-4">
                        <p class="mb-2"><strong>Asientos:</strong></p>
                        <div id="listaAsientos" class="d-flex flex-wrap gap-2">
                            <span class="text-muted small">Ningún asiento seleccionado</span>
                        </div>
                    </div>

                    <div class="alert alert-edgewater small">
                        <i class="fas fa-info-circle me-2"></i>
                        Selecciona los asientos que deseas comprar haciendo clic en ellos.
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .asientos-container {
        max-height: 400px;
        overflow-y: auto;
        margin-bottom: 2rem;
    }

    .fila-asientos {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 4px;
        margin-bottom: 0.5rem;
    }

    .fila-numero {
        width: 25px;
        text-align: center;
        margin-right: 10px;
    }

    .asiento {
        width: 36px;
        height: 36px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        border-radius: 8px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.2s ease;
    }

    body {
        padding-bottom: 100px !important;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const precioBase = @Model.Evento.PrecioBase;
        const asientosCheckbox = document.querySelectorAll('.asiento-checkbox');
        const cantidadElement = document.getElementById('cantidadAsientos');
        const totalElement = document.getElementById('totalPagar');
        const listaElement = document.getElementById('listaAsientos');
        const btnComprar = document.getElementById('btnComprar');
        const btnTexto = document.getElementById('btnTexto');
        const form = document.getElementById('formCompra');

        form.addEventListener('submit', function(e) {
            const seleccionados = document.querySelectorAll('.asiento-checkbox:checked');
            if (seleccionados.length === 0) {
                e.preventDefault();
                alert('Debes seleccionar al menos un asiento');
                return false;
            }
            btnComprar.disabled = true;
            btnTexto.textContent = 'Procesando...';
            return true;
        });

        function actualizarResumen() {
            const seleccionados = document.querySelectorAll('.asiento-checkbox:checked');
            const cantidad = seleccionados.length;
            const total = cantidad * precioBase;

            cantidadElement.textContent = cantidad;
            totalElement.textContent = '₡' + total.toLocaleString('es-CR', {minimumFractionDigits: 2});

            if (cantidad === 0) {
                listaElement.innerHTML = '<span class="text-muted small">Ningún asiento seleccionado</span>';
                btnComprar.disabled = true;
            } else {
                const asientos = Array.from(seleccionados).map(checkbox => {
                    const span = checkbox.nextElementSibling;
                    const fila = span.dataset.fila;
                    const numero = span.dataset.numero;
                    return `F${fila}-A${numero}`;
                });
                listaElement.innerHTML = asientos.map(asiento =>
                    `<span class="badge bg-gothic">${asiento}</span>`
                ).join('');
                btnComprar.disabled = false;
            }
        }

        asientosCheckbox.forEach(checkbox => {
            checkbox.addEventListener('change', function() {
                const asientoSpan = this.nextElementSibling;
                if (this.checked) {
                    asientoSpan.classList.add('seleccionado', 'bg-gothic');
                    asientoSpan.classList.remove('bg-opal');
                } else {
                    asientoSpan.classList.remove('seleccionado', 'bg-gothic');
                    asientoSpan.classList.add('bg-opal');
                }
                actualizarResumen();
            });
        });

        // Inicializar
        asientosCheckbox.forEach(checkbox => {
            if (checkbox.checked) {
                checkbox.nextElementSibling.classList.add('seleccionado', 'bg-gothic');
                checkbox.nextElementSibling.classList.remove('bg-opal');
            }
        });
        actualizarResumen();
    });
</script>