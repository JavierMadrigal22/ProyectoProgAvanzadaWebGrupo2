// <auto-generated />
using System;
using CapaAccesoADatosDAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CapaAccesoADatosDAL.Migrations
{
    [DbContext(typeof(EventoscostaricaContext))]
    [Migration("20250729030313_MigracionInicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CapaObjetos.Modelos.Asiento", b =>
                {
                    b.Property<int>("AsientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AsientoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AsientoId"));

                    b.Property<bool>("EstaOcupado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("EventoId")
                        .HasColumnType("int")
                        .HasColumnName("EventoID");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<int>("Fila")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("AsientoId");

                    b.HasIndex("EventoId", "Fila", "Numero")
                        .IsUnique()
                        .HasDatabaseName("IX_Asientos_Evento_Fila_Numero");

                    b.ToTable("Asientos", (string)null);
                });

            modelBuilder.Entity("CapaObjetos.Modelos.Boleto", b =>
                {
                    b.Property<int>("BoletoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BoletoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoletoId"));

                    b.Property<int>("AsientoId")
                        .HasColumnType("int")
                        .HasColumnName("AsientoID");

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("EventoId")
                        .HasColumnType("int")
                        .HasColumnName("EventoID");

                    b.Property<DateTime>("FechaCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("BoletoId");

                    b.HasIndex("AsientoId");

                    b.HasIndex("EventoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Boletos", (string)null);
                });

            modelBuilder.Entity("CapaObjetos.Modelos.ListaEvento", b =>
                {
                    b.Property<int>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventoId"));

                    b.Property<string>("Banner")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaActualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PrecioBase")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("EventoId");

                    b.ToTable("ListaEvento", (string)null);
                });

            modelBuilder.Entity("CapaObjetos.Modelos.Rol", b =>
                {
                    b.Property<int>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolID"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("FechaActualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RolID")
                        .HasName("PK__Roles__6A1A3DCCC7D5E1E3");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CapaObjetos.Modelos.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaActualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Rol")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UsuarioId")
                        .HasName("PK__Usuarios__2B3DE7986AF7A1B2");

                    b.HasIndex("Rol");

                    b.HasIndex(new[] { "Email" }, "UQ__Usuarios__A9D105343A3640FA")
                        .IsUnique();

                    b.ToTable("Usuarios", t =>
                        {
                            t.HasTrigger("TRG_Usuarios_Update");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("CapaObjetos.Modelos.Asiento", b =>
                {
                    b.HasOne("CapaObjetos.Modelos.ListaEvento", "Evento")
                        .WithMany("Asientos")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("CapaObjetos.Modelos.Boleto", b =>
                {
                    b.HasOne("CapaObjetos.Modelos.Asiento", "Asiento")
                        .WithMany("Boletos")
                        .HasForeignKey("AsientoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CapaObjetos.Modelos.ListaEvento", "Evento")
                        .WithMany("Boletos")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CapaObjetos.Modelos.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Asiento");

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CapaObjetos.Modelos.Usuario", b =>
                {
                    b.HasOne("CapaObjetos.Modelos.Rol", "RolNavigation")
                        .WithMany()
                        .HasForeignKey("Rol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RolNavigation");
                });

            modelBuilder.Entity("CapaObjetos.Modelos.Asiento", b =>
                {
                    b.Navigation("Boletos");
                });

            modelBuilder.Entity("CapaObjetos.Modelos.ListaEvento", b =>
                {
                    b.Navigation("Asientos");

                    b.Navigation("Boletos");
                });
#pragma warning restore 612, 618
        }
    }
}
